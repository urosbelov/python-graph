# coding: utf-8

# flake8: noqa

"""
    NauticalStream(Workspace Microservice)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# Define package exports
__all__ = [
    "MediaApi",
    "ApiResponse",
    "ApiClient",
    "Configuration",
    "OpenApiException",
    "ApiTypeError",
    "ApiValueError",
    "ApiKeyError",
    "ApiAttributeError",
    "ApiException",
    "GetMediaBatchRequest",
    "GetMediaBatchResponse",
    "GetSignedUrlRequest",
    "GetSignedUrlResponse",
    "HTTPValidationError",
    "ListMediaRequest",
    "ListMediaResponse",
    "Media",
    "MediaCategory",
    "MediaFilters",
    "MediaStatus",
    "MediaVariant",
    "PageRequest",
    "PageResponse",
    "ValidationError",
    "ValidationErrorLocInner",
]

if __import__("typing").TYPE_CHECKING:
    # import apis into sdk package
    from media_sdk.api.media_api import MediaApi as MediaApi
    
    # import ApiClient
    from media_sdk.api_response import ApiResponse as ApiResponse
    from media_sdk.api_client import ApiClient as ApiClient
    from media_sdk.configuration import Configuration as Configuration
    from media_sdk.exceptions import OpenApiException as OpenApiException
    from media_sdk.exceptions import ApiTypeError as ApiTypeError
    from media_sdk.exceptions import ApiValueError as ApiValueError
    from media_sdk.exceptions import ApiKeyError as ApiKeyError
    from media_sdk.exceptions import ApiAttributeError as ApiAttributeError
    from media_sdk.exceptions import ApiException as ApiException
    
    # import models into sdk package
    from media_sdk.models.get_media_batch_request import GetMediaBatchRequest as GetMediaBatchRequest
    from media_sdk.models.get_media_batch_response import GetMediaBatchResponse as GetMediaBatchResponse
    from media_sdk.models.get_signed_url_request import GetSignedUrlRequest as GetSignedUrlRequest
    from media_sdk.models.get_signed_url_response import GetSignedUrlResponse as GetSignedUrlResponse
    from media_sdk.models.http_validation_error import HTTPValidationError as HTTPValidationError
    from media_sdk.models.list_media_request import ListMediaRequest as ListMediaRequest
    from media_sdk.models.list_media_response import ListMediaResponse as ListMediaResponse
    from media_sdk.models.media import Media as Media
    from media_sdk.models.media_category import MediaCategory as MediaCategory
    from media_sdk.models.media_filters import MediaFilters as MediaFilters
    from media_sdk.models.media_status import MediaStatus as MediaStatus
    from media_sdk.models.media_variant import MediaVariant as MediaVariant
    from media_sdk.models.page_request import PageRequest as PageRequest
    from media_sdk.models.page_response import PageResponse as PageResponse
    from media_sdk.models.validation_error import ValidationError as ValidationError
    from media_sdk.models.validation_error_loc_inner import ValidationErrorLocInner as ValidationErrorLocInner
    
else:
    from lazy_imports import LazyModule, as_package, load

    load(
        LazyModule(
            *as_package(__file__),
            ("__version__", __version__),
            ("__all__", __all__),
            """# import apis into sdk package
from media_sdk.api.media_api import MediaApi as MediaApi

# import ApiClient
from media_sdk.api_response import ApiResponse as ApiResponse
from media_sdk.api_client import ApiClient as ApiClient
from media_sdk.configuration import Configuration as Configuration
from media_sdk.exceptions import OpenApiException as OpenApiException
from media_sdk.exceptions import ApiTypeError as ApiTypeError
from media_sdk.exceptions import ApiValueError as ApiValueError
from media_sdk.exceptions import ApiKeyError as ApiKeyError
from media_sdk.exceptions import ApiAttributeError as ApiAttributeError
from media_sdk.exceptions import ApiException as ApiException

# import models into sdk package
from media_sdk.models.get_media_batch_request import GetMediaBatchRequest as GetMediaBatchRequest
from media_sdk.models.get_media_batch_response import GetMediaBatchResponse as GetMediaBatchResponse
from media_sdk.models.get_signed_url_request import GetSignedUrlRequest as GetSignedUrlRequest
from media_sdk.models.get_signed_url_response import GetSignedUrlResponse as GetSignedUrlResponse
from media_sdk.models.http_validation_error import HTTPValidationError as HTTPValidationError
from media_sdk.models.list_media_request import ListMediaRequest as ListMediaRequest
from media_sdk.models.list_media_response import ListMediaResponse as ListMediaResponse
from media_sdk.models.media import Media as Media
from media_sdk.models.media_category import MediaCategory as MediaCategory
from media_sdk.models.media_filters import MediaFilters as MediaFilters
from media_sdk.models.media_status import MediaStatus as MediaStatus
from media_sdk.models.media_variant import MediaVariant as MediaVariant
from media_sdk.models.page_request import PageRequest as PageRequest
from media_sdk.models.page_response import PageResponse as PageResponse
from media_sdk.models.validation_error import ValidationError as ValidationError
from media_sdk.models.validation_error_loc_inner import ValidationErrorLocInner as ValidationErrorLocInner

""",
            name=__name__,
            doc=__doc__,
        )
    )
