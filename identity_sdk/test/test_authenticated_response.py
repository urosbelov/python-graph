# coding: utf-8

"""
    NauticalStream(workspace-service)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from identity_sdk.models.authenticated_response import AuthenticatedResponse

class TestAuthenticatedResponse(unittest.TestCase):
    """AuthenticatedResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthenticatedResponse:
        """Test AuthenticatedResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthenticatedResponse`
        """
        model = AuthenticatedResponse()
        if include_optional:
            return AuthenticatedResponse(
                user = identity_sdk.models.user_response.UserResponse(
                    id = '', 
                    status = 'unspecified', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', 
                    email = '', 
                    phone_number = '', 
                    country = '', 
                    birthday = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_by = '', 
                    must_change_password = True, ),
                session = identity_sdk.models.session_response.SessionResponse(
                    status = 'active', 
                    device_id = '', 
                    browser = '', 
                    ip_address = '', 
                    user_agent = '', 
                    id = '', 
                    type = 'user', 
                    user_id = '', 
                    flow_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_expired = True, 
                    valid_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return AuthenticatedResponse(
                user = identity_sdk.models.user_response.UserResponse(
                    id = '', 
                    status = 'unspecified', 
                    first_name = '', 
                    middle_name = '', 
                    last_name = '', 
                    email = '', 
                    phone_number = '', 
                    country = '', 
                    birthday = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deleted_by = '', 
                    must_change_password = True, ),
                session = identity_sdk.models.session_response.SessionResponse(
                    status = 'active', 
                    device_id = '', 
                    browser = '', 
                    ip_address = '', 
                    user_agent = '', 
                    id = '', 
                    type = 'user', 
                    user_id = '', 
                    flow_id = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_expired = True, 
                    valid_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
        )
        """

    def testAuthenticatedResponse(self):
        """Test AuthenticatedResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
